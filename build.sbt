organization := "com.github.mboogerd"

lazy val spec = project.in(file("spec"))
  .settings(name := "mmap-spec")
  .settings(GenericConf.settings())
  .settings(DependenciesConf.common)
  .settings(LicenseConf.settings)
  .settings(ReleaseConf.publishSettings)
  .enablePlugins(AutomateHeaderPlugin)
  .settings(TutConf.settings)
  .enablePlugins(TutPlugin)

lazy val crdt = project.in(file("crdt"))
  .settings(name := "mmap-crdt")
  .settings(GenericConf.settings())
  .settings(DependenciesConf.common)
  .settings(LicenseConf.settings)
  .settings(ReleaseConf.publishSettings)
  .enablePlugins(AutomateHeaderPlugin)
  .settings(TutConf.settings)
  .enablePlugins(TutPlugin)

lazy val mem = project.in(file("mem"))
  .settings(name := "mmap-mem")
  .settings(GenericConf.settings())
  .settings(DependenciesConf.common)
  .settings(DependenciesConf.akka)
  .settings(LicenseConf.settings)
  .settings(ReleaseConf.publishSettings)
  .enablePlugins(AutomateHeaderPlugin)
  .settings(TutConf.settings)
  .enablePlugins(TutPlugin)
  .dependsOn(spec, crdt)

lazy val all = project.in(file("."))
  .settings(name := "mmap-all")
  .settings(GenericConf.settings())
  .settings(ReleaseConf.publishSettings)
  .aggregate(spec, crdt, mem)
  .dependsOn(spec, crdt, mem)
